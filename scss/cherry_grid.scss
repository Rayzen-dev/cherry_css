@import "theme_var";

* {
	@each $navigator in $navigator_prefixes {
		#{$navigator}box-sizing: border-box;
	}
	box-sizing: border-box;
}

body,
html {
	padding: 0;
	margin: 0;
}

.container {
	max-width: $lg_width * 1px;
}

.container-fluid {
	width: 100%;
}
[class^="container"] {margin: 1rem auto;padding:0 1rem}
[class^="container"]:after{
	content:"";
	display: table;
	clear: both;
}

.img {
	width: auto;
	max-width: 100%;
	height: auto!important;
}

@mixin create-mq($breakpoint) {
	@if($breakpoint == 0) {
		@content;
	} @else {
		@media all and (min-width: $breakpoint * 1px) {
			@content
		}
	}
}

@mixin create-col-classes($modifier, $nb_col, $breakpoint) {
	@include create-mq($breakpoint) {
		@for $i from 1 through $nb_col {
			.col#{$modifier}-#{$i} {
				width: (100 / ($nb_col / $i) ) * 1%;
				@each $navigator in $navigator_prefixes {
					#{$navigator}animation-property: all;
					#{$navigator}transition-duration: 1s;
				}
			}
			.col#{$modifier}-offset-#{$i} {
				margin-left: (100 / ($nb_col / $i) ) * 1%;
			}
		}
	}
}

.row {
	margin: .75rem 0;
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	flex: 0 1 auto;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	-ms-flex-direction: row;
	flex-direction: row;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
	&.middle-xs {
		justify-content: center;
	}
	&.right-xs {
		justify-content: flex-end;
	}
	&.between-xs {
		justify-content: space-between;
	}
	&.around-xs {
		justify-content: space-around;
	}
}

[class^="col-"] {
	padding: 1em;
	-webkit-box-flex: 0;
	-ms-flex: 0 0 auto;
	flex: 0 0 auto;
}


$map-grid-col: ('-xs': $xs_width, '-sm': $sm_width, '-md': $md_width, '-lg': $lg_width);
@each $modifier, $breakpoint in $map-grid-col {
	@include create-col-classes($modifier, $nb_col, $breakpoint);
}