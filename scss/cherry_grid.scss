//Global var
$xs_width: 320;
$sm_width: 768;
$md_width: 992;
$lg_width: 1200;
$nb_col: 12;
$navigator_prefixes: -webkit- -moz- -ms- -o-;

* {
	@each $navigator in $navigator_prefixes {
		#{$navigator}box-sizing: border-box;
	}
	box-sizing: border-box;
}

body,
html {
	padding: 0;
	margin: 0;
}

.container {
	max-width: $md_width * 1px;
	padding: 10px auto;
	margin: 0 auto;
}

.container-fluid {
	padding: 10px 0;
	width: 100%;
}

.container:after,.container-fluid:after,.row:after{
	content:"";
	display: table;
	clear: both;
}

.img {
	width: auto;
	max-width: 100%;
	height: auto!important;
}

@mixin create-mq($breakpoint) {
	@if($breakpoint == 0) {
		@content;
	} @else {
		@media all and (min-width: $breakpoint * 1px) {
			@content
		}
	}
}

@mixin create-col-classes($modifier, $nb_col, $breakpoint) {
	@include create-mq($breakpoint) {
		@for $i from 1 through $nb_col {
			.col#{$modifier}-#{$i} {
				width: (100 / ($nb_col / $i) ) * 1%;
				@each $navigator in $navigator_prefixes {
					#{$navigator}animation-property: all;
					#{$navigator}transition-duration: 1s;
				}
			}
			.col#{$modifier}-offset-#{$i} {
				margin-left: (100 / ($nb_col / $i) ) * 1%;
			}
		}
	}
}

.row {
	padding: 0 1em;
	margin: 10px auto;
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	flex-wrap: wrap;
	&.middle-xs {
		//
	}
}

[class^="col-"] {
	padding: 1em;
}


$map-grid-col: ('-xs': $xs_width, '-sm': $sm_width, '-md': $md_width, '-lg': $lg_width);
@each $modifier, $breakpoint in $map-grid-col {
	@include create-col-classes($modifier, $nb_col, $breakpoint);
}